@use "sass:math";
$grid-columns: 12;
// grid gaps
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 30px,
  "3": 45px,
);

.container {
  width: 100%;
  margin: 0 auto;
  padding: 0 1.5rem;
  box-sizing: border-box;
  height: 100%;
}
.row {
  width: 100%;
  height: 100%;
  display: flex;
  flex-wrap: wrap;
}

$grid-layout: flex-start, flex-end, space-between, space-around, center;
@each $val in $grid-layout {
  .justify-#{$val} {
    justify-content: $val;
  }
}
@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}
